// pages/modelSearch/modelSearch.js
Page({

  /**
   * 页面的初始数据
   */
  data: {
    viewShowed: false, //显示结果view的状态
    inputVal: "", // 搜索框值
    catList: [], //搜索渲染推荐数据
    list1: [
      '378167',
      '393100',
      '393104',
      '1974-13',
      '367369',
      '381735',
      '1974-12',
      '389266',
      '393145',
      '378130',
      '409298',
      '360063',
      '1973-8',
      '409295',
      '389286',
      '395171',
      '395174',
      '378160',
      '378167',
      '406385',
      '409266',
      '378191',
      '409292',
      '409305',
      '393102',
      '333612',
      '1974-10',
      '1974-1',
      '1987-12',
      '409301',
      '1973-1',
      '393123',
      '395172',
      '1974-9',
      '1973-6',
      '378192',
      '368551',
      'H-22',
      '1973-7',
      '409265',
      '409268',
      'H-23',
      'H-21',
      '324918-7',
      '324918-5',
      '324918-6',
      'H-25',
      '374889',
      '1974-11',
      '323901',
      '324918-1',
      '324918-2',
      '324918-3',
      '333595',
      '347819',
      '358799',
      '359870',
      '372008',
      '374889',
      '376523',
      '378154',
      '378155',
      '380313',
      '380323',
      '380326',
      '380327',
      '384593',
      '389149',
      '389230',
      '389251',
      '389264',
      '389269',
      '389297',
      '389298',
      '393115',
      '393134',
      '393136',
      '393138',
      '393140',
      '393150',
      '393152',
      '393154',
      'H-24',
      '359087',
      '360063',
      '378130',
      '378150',
      '381735',
      '389303',
      '397805',
      '409271',
      '314918-6',
      '348463',
      '370902',
      '370903',
      '374887',
      '380236',
      '389233',
      '389233',
      '324918-12',
      '324918-8',
      '354631',
      '374964',
      '378206',
      '380306',
      '389124',
      '389125',
      '389212',
      '389227',
      '389238',
      '389239',
      '389243',
      '389288',
      '389291',
      '393097',
      '393106',
      '393111',
      '409263',
      'H-20',
      '378186',
      '376437',
      '378186',
      '389260',
      '389275',
      '389276',
      '389277',
      '392181',
      '392182',
      '393077',
      '393079',
      '393085',
      '393129',
      '393157',
      '397669',
      '397671',
      '344431',
      '378177',
      '378206',
      '378243',
      '389284',
      '395849',
      '395852',
      '401773',
      '401791',
      '358873',
      '378164',
      '378165',
      '378177',
      '378183',
      '378243',
      '381737',
      '389118',
      '389214',
      '389235',
      '395825',
      '395838',
      '401769',
      '10313',
      '10977',
      '389243',
      '389275',
      '389276',
      '389277',
      '389281',
      '389282',
      '395838',
      '395840',
      '324918-14',
      '351512',
      '381174',
      '389273',
      '393109',
      '401776',
      '401777',
      '401789',
      '11376',
      '17694',
      '347819',
      '348463',
      '363103',
      '374887',
      '376523',
      '381354',
      '1074-11',
      '1973-2',
      '1976-1',
      '1976-9',
      '314918-5',
      '344431',
      '359087',
      '378150',
      '389301',
      '389303',
      '393225',
      '401756',
      '401759',
      '401762',
      '10108',
      '11421',
      '11891',
      '11921',
      '12616',
      '13164',
      '14736',
      '15643',
      '15644',
      '15991',
      '17691',
      '17692',
      '17693',
      '318130',
      '341403',
      '342324',
      '342541',
      '359870',
      '367369',
      '380236',
      '380313',
      '380380',
      '384593',
      '389225',
      '389227',
      '389230',
      '389235',
      '389238',
      '389239',
      '389251',
      '389254',
      '389255',
      '389257',
      '389258',
      '389260',
      '389263',
      '389264',
      '389266',
      '389269',
      '389271',
      '389294',
      '389297',
      '389298',
      '389307',
      '11891',
      '1973-3',
      '1973-5',
      '358860',
      '372008',
      '378160',
      '378197',
      '378198',
      '378204',
      '378223',
      '378229',
      '378230',
      '378236',
      '380306',
      '389212',
      '389247',
      '389248',
      '389286',
      '393123',
      '395847',
      '397824',
      '397843',
      '401767',
      '401771',
      '401779',
      '401780',
      '401783',
      '401787',
      '1973-4',
      '389351',
      '405490',
      '000025',
      '000033', 
      '000014',
      '000029', 
      '000004',
      '000022', 
      '000026',
      '000032', 
      '000039',
      '000013', 
      '000018',
      '1973-4', 
      '000015',
      '000007', 
      '000001',
      '000008', 
      '000045',
      '000021', 
      '000041',
      '395768-6', 
      '395768-9',
      '395768-11', 
      '395768-16',
      '324918-9', 
      '000047',
    ],
    area:[],
    model:[],
    storage:[]
  },

  // 键盘抬起事件2
  inputTyping: function(e) {
    var value = e.detail.value
    var that = this;
    var list1 = that.data.list1
    if (value == '') {
      that.setData({
        viewShowed: false,
      });
    } else {
    //“这里需要特别注意，不然在选中下拉框值的时候，下拉框又出现”
      if (e.detail.cursor) { //e.detail.cursor表示input值当前焦点所在的位置
        var arr = [];
        for (var i = 0; i < list1.length; i++) {
          if (list1[i].indexOf(value) >= 0) {
            arr.push(list1[i]);
          }
        }
        that.setData({
          viewShowed: true,
          carList: arr
        });
      }
    }
  },

  // 获取选中推荐列表中的值
  name: function(res) {
    console.log(res.currentTarget.dataset.index);
    var index = res.currentTarget.dataset.index
    var that = this;
    that.setData({
      inputVal: that.data.carList[index],
      viewShowed: false,
    });
    console.log(that.data.inputVal);
  },

     //查询按钮功能实现
     query:function(e){
      var that = this;//把this对象复制到临时变量that，解决作用域不够的问题
      that.setData({
        area:[],
        model:[],
        storage:[]
      });
      wx.request({
            url: 'https://www.liuke.xyz/electrode/login',
            data:{
              code:'modelsearch',
              modelName:JSON.stringify(this.data.inputVal)},
            method:'POST',
            header: {
              'content-type': 'application/json' // 默认值
            },
           
            success: function(res) {
              console.log(res.data);
  var obj = res.data;
  
  
  for(var i=0;i<obj.length;i++)
  {
    var area1 = obj[i].area,
    model1 = obj[i].model,
    storage1 = obj[i].storage,
    area = that.data.area,
    model = that.data.model,
    storage = that.data.storage;
  
    area.push(area1);
    model.push(model1);
    storage.push(storage1);
  
     that.setData({
      area: that.data.area,
      model: that.data.model,
      storage: that.data.storage
    });   
    // 调试时打开该语句
  }
  // console.log(obj.model);
  // console.log(that.data.number);
            }
          })
     },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {

  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})